/**
 * Jaqpot API
 * Jaqpot v4 (Quattro) is the 4th version of a YAQP, a RESTful web service which can be used to train machine learning models and use them to obtain toxicological predictions for given chemical compounds or engineered nano materials. The project is written in Java8 and JEE7.
 *
 * OpenAPI spec version: 4.0.3
 * Contact: hampos@me.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/* tslint:disable:no-unused-variable member-ordering */

import { Inject, Injectable, Optional } from '@angular/core';
import { map, filter, catchError, mergeMap, tap } from 'rxjs/operators';
import { Observable , of} from 'rxjs';
import '../rxjs-operators';

import { Algorithm } from '../model/algorithm';
import { ErrorReport } from '../model/errorReport';
import { Task } from '../model/task';

// import { BASE_PATH, COLLECTION_FORMATS } from '../variables';
import { Config } from '../../config/config';
// import { SessionService } from '../../session/session.service';
import { DialogsService } from '../../dialogs/dialogs.service';
import { OidcSecurityService } from 'angular-auth-oidc-client';
import { User } from '@euclia/accounts-client';
import { BaseClient } from './base.client';
import { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';
import { EucliaAccountsFactory, IEucliaAccounts } from '@euclia/accounts-client/dist/EucliaAccounts';
import { Organization } from '@euclia/accounts-client/dist/models/models';



@Injectable()
export class OrganizationService {
    
    _privateBasePath:string;
    private orgnanization:Organization;
    _organizationBase:string
    private accountsClient:IEucliaAccounts

    constructor(http: HttpClient,
        public dialogsService:DialogsService,
        public oidcSecurityService: OidcSecurityService){
            // super(http, dialogsService, oidcSecurityService, "/organization/")
            // console.log("Orgs api at:")
            // console.log(Config.AccountsApi)
            this._privateBasePath = Config.JaqpotBase;
            this.accountsClient = new EucliaAccountsFactory(Config.AccountsApi).getClient(),
            this._organizationBase = this._privateBasePath + "/organization/";
        }




        public getOrgById(id:string):Promise<Organization>{
            const token = this.oidcSecurityService.getToken();
            return this.accountsClient.getOrganization(id, token)
        }



}